name: Django Pulse Chat CI

on:
  push:
    branches: [master]

jobs:
  # lint:
  #   name: Lint Code
  #   runs-on: ubuntu-latest

  #   defaults:
  #     run:
  #       working-directory: server

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.13.5"

  #     - name: Install Ruff
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install ruff

  #     - name: Run Ruff
  #       run: ruff check .

  test:
    name: Test Suite
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: server

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7

    env:
      DATABASE_NAME: test_db
      DATABASE_USER: test_user
      DATABASE_PASSWORD: test_password
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      SECRET_KEY: dummysecret
      DEBUG: "True"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.5"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for DB
        run: |
          until pg_isready -h localhost -p 5432 -U test_user; do
            echo "Waiting for database..."
            sleep 1
          done

      - name: Run users migrations
        run: |
          python manage.py makemigrations users
          python manage.py migrate users

      - name: Run migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate --noinput
      
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:./server" >> $GITHUB_ENV

      - name: Run tests
        run: pytest
