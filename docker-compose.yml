services:
  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: db
    hostname: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./database/db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
  

  redis:
    image: redis:7-alpine
    container_name: redis
    hostname: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5


  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: server
    container_name: server
    hostname: server
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    entrypoint: /app/entrypoint.sh
    # command: python manage.py runserver 0.0.0.0:8000
    command: >
      gunicorn core.asgi:application
      --workers=4
      --worker-class=uvicorn.workers.UvicornWorker
      --bind=0.0.0.0:8000
    volumes:
      - ./server:/app
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  
  celery:
    image: server
    container_name: celery
    hostname: celery
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/0
    command: celery -A core worker --loglevel=info
    volumes:
      - ./server:/app
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    

    